@namespace Shipwreck.ViewModelUtils.Components
@inherits ListComponentBase<ICommandViewModel, ICommandViewModel>
@using (OnBeginRender())
{
    var d = DataContext;
    var src = (Source?.OfType<ICommandViewModel>() ?? Enumerable.Empty<ICommandViewModel>()).Where(e => e.IsVisible).ToList();

    if (d != null)
    {
        if (src.Count > 0 && (src.Count != 1 || src[0] != DataContext))
        {
            var typeClass = d?.Style.ToButtonClass(BorderStyle.OutlineSecondary);
            var disabled = IsEnabled == false ? "disabled" : null;

            <div class="btn-group @BaseClass p-0">
                <CommandButton BaseClass="@("btn " + BaseClass)"
                       IsVisible="@IsVisible"
                       IsEnabled="@IsEnabled"
                       IsActive="@IsActive"
                       ShowIcon="@ShowIcon"
                       ShowTitle="@ShowTitle"
                       ShowBadge="@ShowBadge"
                       DataContext="@d" />
                <button type="button"
                class="btn @typeClass @(IsActive == true ? " active" : null) dropdown-toggle dropdown-toggle-split"
                disabled="@disabled"
                data-toggle="dropdown"
                aria-haspopup="true"
                aria-expanded="false">
                    <span class="sr-only">Toggle Dropdown</span>
                </button>
                <div class="dropdown-menu w-100">
                    @foreach (var c in src)
                    {
                        <DropdownItem DataContext="@c" />
                    }
                </div>
            </div>
        }
        else
        {
            <CommandButton BaseClass="@BaseClass"
                   IsVisible="@IsVisible"
                   IsEnabled="@IsEnabled"
                   IsActive="@IsActive"
                   DataContext="@d" />
        }
    }
}
@code
{
}
