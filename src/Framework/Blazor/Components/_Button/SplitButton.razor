@namespace Shipwreck.ViewModelUtils.Components
@inherits ListComponentBase<ICommandViewModel, ICommandViewModel>
@{
    var d = DataContext;
}
@if (d != null)
{
    if (Source?.Count > 0 && (Source.Count != 1 || Source[0] != DataContext))
    {
        var typeClass = d?.Style.ToButtonClass(BorderStyle.OutlineSecondary);
        var disabled = IsEnabled == false ? "disabled" : null;

        <div class="btn-group @BaseClass p-0">
            <CommandButton BaseClass="@("btn " + BaseClass)"
                           IsVisible="@IsVisible"
                           IsEnabled="@IsEnabled"
                           IsActive="@IsActive"
                           ShowIcon="@ShowIcon"
                           ShowTitle="@ShowTitle"
                           ShowBadge="@ShowBadge"
                           DataContext="@d" />
            <button type="button"
                    class="btn @typeClass @(IsActive == true ? " active" : null) dropdown-toggle dropdown-toggle-split"
                    disabled="@disabled"
                    data-toggle="dropdown"
                    aria-haspopup="true"
                    aria-expanded="false">
                <span class="sr-only">Toggle Dropdown</span>
            </button>
            <div class="dropdown-menu w-100">
                @foreach (ICommandViewModel c in Source)
                {
                    var os = c.Style & ~(BorderStyle.OutlineSecondary);
                    <a @key="@c.GetHashCode()"
                       class="dropdown-item @os.ToClassName("text-")"
                       href="@c.Href"
                       title="@c.Description"
                       disabled="@disabled"
                       @onclick="@(() => c.Execute())"
                       @onclick:preventDefault>
                        @if (c.Icon != null)
                        {
                            <span class="fas @c.Icon"></span>
                        }
                        @c.Title
                    </a>
                }
            </div>
        </div>
    }
    else
    {
        <CommandButton BaseClass="@BaseClass"
                       IsVisible="@IsVisible"
                       IsEnabled="@IsEnabled"
                       IsActive="@IsActive"
                       DataContext="@d" />
    }
}
@code
{
}
