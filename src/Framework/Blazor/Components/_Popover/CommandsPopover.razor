@namespace Shipwreck.ViewModelUtils.Components
@inherits BindableComponentBase<CommandViewModelCollection>
@using (OnBeginRender())
{
    var d = DataContext;
    <PopoverFrame ReferenceElement="@ReferenceElement"
                  Boundaries="@Boundaries"
                  OnClosed="@(() => Presenter?.CloseModal())">
        <ListScope T="CommandViewModelBase"
                   Source="d">
            @foreach (var c in d ?? Enumerable.Empty<CommandViewModelBase>())
            {
                if (c.IsVisible)
                {
                    <CommandButton @key="c.GetHashCode()"
                                   BaseClass="btn btn-block"
                                   DataContext="c" />
                }
            }
        </ListScope>
    </PopoverFrame>
}
@code
{
    [Parameter]
    public ElementReference ReferenceElement { get; set; }

    [Parameter]
    public ElementReference Boundaries { get; set; }

    [Parameter]
    public ModalPresenterBase Presenter { get; set; }

    public static void Show(ModalPresenterBase presenter, ElementReference reference, CommandViewModelCollection dataContext, ElementReference boundaries = default)
    {
        if (dataContext.VisibleCount <= 0)
        {
            return;
        }

        presenter.ShowModal(typeof(CommandsPopover), new Dictionary<string, object>
            {
                [nameof(DataContext)] = dataContext,
                [nameof(ReferenceElement)] = reference,
                [nameof(Presenter)] = presenter,
                [nameof(Boundaries)] = boundaries,
            });
    }
}
