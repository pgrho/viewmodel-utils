@namespace Shipwreck.ViewModelUtils.Components
@using Shipwreck.ViewModelUtils.Searching
@inherits BindableComponentBase<StringConditionViewModel>
@{
    var d = DataContext;
}
@if (d != null)
{
    <SearchConditionHeader DataContext="@d" />
    <dd>
        <form class="input-group"
              @onsubmit="@d.Page.BeginSearch">
            <SearchOperatorButton @bind-Operator="@d.Operator"
                                  Operators="@StringConditionViewModel.Operators"
                                  OnSelected="@(() => _Input.FocusAsync())" />
            <input @ref="@_Input"
                   class="form-control"
                   type="text"
                   @bind="@d.Value" />
            <SearchRemoveButton DataContext="@d" />
        </form>
    </dd>
}
@code
{
    private ElementReference _Input;

    protected override bool OnDataContextPropertyChanged(string propertyName)
    {
        switch (propertyName)
        {
            case nameof(DataContext.DisplayName):
            case nameof(DataContext.Operator):
            case nameof(DataContext.Value):
                return true;
        }
        return false;
    }
}
