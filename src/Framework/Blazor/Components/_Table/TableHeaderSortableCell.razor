@namespace Shipwreck.ViewModelUtils.Components
@inherits BindableComponentBase<IPaginatable>
@using (OnBeginRender())
{
    var d = DataContext;
    <th @attributes="@AdditionalAttributes">
        @if (SortKeys?.Count > 0 && d != null)
        {
            var direction = d.Order.Take(SortKeys.Count).Select(e => e.Member).SequenceEqual(SortKeys)
            && d.Order.Take(SortKeys.Count).Select(e => e.IsDescending).Distinct().ToList() is var ds
            && ds.Count == 1 ? ds?[0] : null;

            var fk = GetFilterKey();

            <a class="text-light"
               href="javascript:void(0)"
               title="@Description"
               @onclick="@(() => d.ToggleSortKeys(SortKeys))"
               @onclick:preventDefault="true"
               data-enhance-nav="false">
                @if (!string.IsNullOrEmpty(Icon))
                {
                    <span class="@Icon"></span>
                }
                @Header
                <span class="fas @(direction == null ? null : direction == true ? "fas fa-caret-down" : "fas fa-caret-up")"></span>
            </a>
            @if (d is IFilterable filterable && !string.IsNullOrEmpty(fk) && filterable.IsFilterSupported(fk))
            {
                <a @ref="@_FilterButton"
                   class="@(string.IsNullOrEmpty(filterable.GetFilter(fk)) ? "text-muted" : "text-light")"
                   href="javascript:void(0)"
                   @onclick="@(() =>
                   {
                       if (!filterable.TryShowPopover(fk, this, _FilterButton))
                       {
                           if (DataContext is IEnumMemberFilter)
                           {
                               EnumFilterPopover.Show(HasPopoverPresenter.PopoverPresenter, _FilterButton, this);
                           }
                           else
                           {
                               FilterPopover.Show(HasPopoverPresenter.PopoverPresenter, _FilterButton, this);
                           }
                       }
                   })"
                   @onclick:preventDefault="true"
                   data-enhance-nav="false"><span class="fas fa-filter"></span></a>
            }
        }
        else
        {
            <span title="@Description">
                @if (!string.IsNullOrEmpty(Icon))
                {
                    <span class="@Icon"></span>
                }
                @Header
            </span>
        }
    </th>
}
@code
{
}
