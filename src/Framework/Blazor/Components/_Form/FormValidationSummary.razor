@namespace Shipwreck.ViewModelUtils.Components
@using System.ComponentModel.DataAnnotations
@inherits ListComponentBase<FrameworkPageViewModel, ValidationResult>
@using (OnBeginRender())
{
    if (IsVisible)
    {
        <div class="alert alert-danger">
            <div>
                <div>入力値が無効です。</div>
                <ul>
                    @foreach (ValidationResult r in Source)
                    {
                        <li>
                            <a href="javascript:void(0)"
                               @onclick="@(() => DataContext?.Focus(r.MemberNames.FirstOrDefault()))"
                               @onclick:preventDefault="true"
                               data-enhance-nav="false">
                                @r.ErrorMessage
                            </a>
                        </li>
                    }
                </ul>
            </div>
            <button type="button"
                    class="close"
                    data-dismiss="alert"
                    aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }
}
@code
{
    private bool _IsVisible;

    [Parameter]
    public bool IsVisible
    {
        get => _IsVisible;
        set
        {
            if (SetProperty(ref _IsVisible, value))
            {
                using (Host?.PushPropertyChangedExpectation())
                {
                    IsVisibleChanged?.Invoke(_IsVisible);
                }
            }
        }
    }

    [Parameter]
    public Action<bool> IsVisibleChanged { get; set; }

    protected override bool OnDataContextPropertyChanged(string propertyName) => false;

    protected override bool OnItemPropertyChanged(ValidationResult item, string propertyName) => false;
}
