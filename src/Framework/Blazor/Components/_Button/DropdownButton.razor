@namespace Shipwreck.ViewModelUtils.Components
@inherits ListComponentBase<ICommandViewModel>
@using (OnBeginRender())
{
    var src = (Source?.OfType<ICommandViewModel>() ?? Enumerable.Empty<ICommandViewModel>()).Where(e => e.IsVisible).ToList();
    var disabled = src.Count > 0 ? null : "disabled";
    var isBlock = BaseClass.Contains("btn-block") || BaseClass.Contains("btn-half"); 

    <div class="dropdown @(isBlock ? BaseClass + " p-0" : null)"
         style="@(isBlock ? null : "display: inline-block")">
        <button class="@BaseClass @(Style?.ToButtonClass()) dropdown-toggle @disabled"
                type="button"
                id="@_Id"
                disabled="@disabled"
                title="@Description"
                data-toggle="dropdown"
                aria-haspopup="true"
                aria-expanded="false">
            @ChildContent
        </button>
        <div class="dropdown-menu"
             aria-labelledby="@_Id">
            @foreach (var c in src)
            {
                <DropdownItem DataContext="@c" />
            }
        </div>
    </div>
}
@code
{
}
